/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   fdf.c                                              :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dvalenti <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/01/22 21:14:43 by dvalenti          #+#    #+#             */
/*   Updated: 2018/01/29 21:00:31 by dvalenti         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/fdf.h"

t_vect3			**cord_convert(t_pars *str_map)
{
	t_pars		*ptr_sm;
	t_vect3		**map;
	int			x;
	int			y;

	y = 0;
	if (!(map = (t_vect3**)malloc(sizeof(t_vect3*))))
		return (NULL);
	ptr_sm = str_map;
	while (ptr_sm && ptr_sm->next)
	{
		map[y] = new_v0();
		x = 0;
		while (x < str_map->sizex)
		{
			map[y][x].x = x;
			map[y][x].y = y;
			map[y][x].z = ft_getnbr(ptr_sm->str[x]);
			printf("{%d %d %d}", map[y][x].x, map[y][x].y, map[y][x].z);
			x++;
		}
		printf("\n");
		ptr_sm = ptr_sm->next;
		y++;
	}
	return (map);
}


t_vect3			**read_map(char **av)
{
	t_pars		*pars;
	t_pars		*ptr;
	int			fd;

	if (!(pars = new_list()))
		return (NULL);
	ptr = pars;
	fd = open(av[1], O_RDONLY);
	while ((get_next_line(fd, &(ptr->line))) > 0 && (ptr->str = ft_strsplit(ptr->line, ' ')) && (ptr->next = new_list()))
	{
		while (ptr->str[ptr->sizex])
			ptr->sizex++;
		if (ptr->sizex != pars->sizex)
			return (NULL);
		ptr->sizey++;
		printf("%s | %d\n", ptr->line, ptr->sizex); //PRINTF
		ptr = ptr->next;
	}
	free(ptr);
	ptr = pars;
	close(fd);
	return (cord_convert(pars));
}

void		calcul_map(t_vect3	**map, void *mlx, void *wn)
{
	int		x;
	int		y;

	y = 0;
	while (map[y])
	{
		x = 0;
		while(map[y][x] != NULL)
		{
			mlx_pixel_put(mlx, wn, map[y][x].x, map[y][x].y, 0x00FFFFFF);
			x++;
		}
		y++;
	}
}

int		main(int ac, char **av)
{
	void	*mlx;
	void	*wn;
	t_vect3	**map;
	(void)ac;

	mlx = mlx_init();
	wn = mlx_new_window(mlx, 500, 500, "~FDF~");
	if(!(map = read_map(av)))
		return (-1);
	calcul_map(map, mlx, wn);
	mlx_loop(mlx);
	return (0);
}
